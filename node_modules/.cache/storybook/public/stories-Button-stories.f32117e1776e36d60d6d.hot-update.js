"use strict";
self["webpackHotUpdateacl_rn"]("stories-Button-stories",{

/***/ "./src/button/button.tsx":
/*!*******************************!*\
  !*** ./src/button/button.tsx ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _stitches__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../stitches */ "./src/stitches.ts");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");



const StyledButton = (0,_stitches__WEBPACK_IMPORTED_MODULE_1__.styled)('button', {
  padding: '$2 $3',
  fontSize: '$2',
  borderWidth: '$1',
  cursor: 'pointer',
  borderRadius: '$2',
  background: '$background',
  borderColor: '$shadow',
  color: '$text',
  boxShadow: '$2',
  variants: {
    type: {
      link: {
        borderWidth: '$0',
        boxShadow: '$0',
        background: 'transparent'
      }
    },
    effect: {
      blink: {
        animation: `${_stitches__WEBPACK_IMPORTED_MODULE_1__.scaleUp} 0.6s ease-in-out infinite`
      }
    },
    size: {
      small: {
        fontSize: '$1',
        padding: '$1 $3'
      },
      large: {
        fontSize: '$3',
        padding: '$3 $3'
      }
    }
  }
});

// extract variants from StyledButton component. This ensures your variants support responsive syntax.

const Button = props => {
  const {
    theme,
    label,
    onClick
  } = props;
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(StyledButton, {
    ...props,
    onClick: onClick,
    className: (0,_stitches__WEBPACK_IMPORTED_MODULE_1__.targetTheme)(theme),
    children: [" ", label, " "]
  });
};
Button.displayName = "Button";
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Button);
try {
    // @ts-ignore
    button.displayName = "button";
    // @ts-ignore
    button.__docgenInfo = { "description": "", "displayName": "button", "props": { "label": { "defaultValue": null, "description": "", "name": "label", "required": true, "type": { "name": "string" } }, "onClick": { "defaultValue": null, "description": "", "name": "onClick", "required": true, "type": { "name": "(e: MouseEvent<HTMLButtonElement, MouseEvent>) => any" } }, "theme": { "defaultValue": null, "description": "", "name": "theme", "required": false, "type": { "name": "enum", "value": [{ "value": "\"dark\"" }, { "value": "\"default\"" }] } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "\"link\" | ({ \"@initial\"?: \"link\"; } & { [x: string]: \"link\"; }) | undefined" } }, "effect": { "defaultValue": null, "description": "", "name": "effect", "required": false, "type": { "name": "\"blink\" | ({ \"@initial\"?: \"blink\"; } & { [x: string]: \"blink\"; }) | undefined" } }, "size": { "defaultValue": null, "description": "", "name": "size", "required": false, "type": { "name": "\"small\" | \"large\" | ({ \"@initial\"?: \"small\" | \"large\"; } & { [x: string]: \"small\" | \"large\"; }) | undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/button/button.tsx#button"] = { docgenInfo: button.__docgenInfo, name: "button", path: "src/button/button.tsx#button" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/stitches.ts":
/*!*************************!*\
  !*** ./src/stitches.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   darkTheme: () => (/* binding */ darkTheme),
/* harmony export */   scaleUp: () => (/* binding */ scaleUp),
/* harmony export */   styled: () => (/* binding */ styled),
/* harmony export */   targetTheme: () => (/* binding */ targetTheme)
/* harmony export */ });
/* harmony import */ var _stitches_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stitches/react */ "./node_modules/@stitches/react/dist/index.mjs");

const {
  styled
} = (0,_stitches_react__WEBPACK_IMPORTED_MODULE_0__.createStitches)({
  theme: {
    colors: {
      background: '#ffffff',
      text: '#333333',
      primary: '#007bff',
      secondary: '#6c757d',
      success: '#28a745',
      danger: '#dc3545',
      warning: '#ffc107',
      info: '#17a2b8',
      shadow: 'rgba(0, 0, 0, 0.2)'
    },
    space: {
      1: '5px',
      2: '10px',
      3: '15px'
    },
    fontSizes: {
      1: '12px',
      2: '15px',
      3: '17px'
    },
    fonts: {
      untitled: 'Untitled Sans, apple-system, sans-serif',
      mono: 'Söhne Mono, menlo, monospace'
    },
    fontWeights: {
      1: '200',
      2: '500',
      3: '700'
    },
    lineHeights: {},
    letterSpacings: {},
    sizes: {},
    borderWidths: {
      0: '0',
      1: '1px',
      2: '2px'
    },
    borderStyles: {},
    radii: {
      1: '3px',
      2: '7px',
      3: '999px',
      4: '50%'
    },
    shadows: {
      0: '0 0 0 transparent',
      1: '0 1px 3px rgba(0, 0, 0, 0.2)',
      2: '0 2px 8px rgba(0, 0, 0, 0.22)',
      3: '0 3px 6px rgba(0, 0, 0, 0.3)'
    },
    zIndices: {},
    transitions: {}
  }
});
const {
  createTheme
} = (0,_stitches_react__WEBPACK_IMPORTED_MODULE_0__.createStitches)({});
const darkTheme = createTheme('dark-theme', {
  colors: {
    background: '#333333',
    text: '#ffffff',
    primary: '#007bff',
    secondary: '#6c757d',
    success: '#28a745',
    danger: '#dc3545',
    warning: '#ffc107',
    info: '#17a2b8',
    shadow: 'rgba(0, 0, 0, 0.2)'
  },
  space: {
    1: '5px',
    2: '10px',
    3: '15px'
  },
  fontSizes: {
    1: '12px',
    2: '13px',
    3: '15px'
  },
  fonts: {
    untitled: 'Untitled Sans, apple-system, sans-serif',
    mono: 'Söhne Mono, menlo, monospace'
  },
  fontWeights: {
    1: '200',
    2: '500',
    3: '700'
  },
  lineHeights: {},
  letterSpacings: {},
  sizes: {},
  borderWidths: {
    0: '0',
    1: '1px',
    2: '2px'
  },
  borderStyles: {},
  radii: {
    1: '3px',
    2: '7px',
    3: '999px',
    4: '50%'
  },
  shadows: {
    0: '0 0 0 transparent',
    1: '0 1px 3px rgba(0, 0, 0, 0.2)',
    2: '0 2px 8px rgba(0, 0, 0, 0.22)',
    3: '0 3px 6px rgba(0, 0, 0, 0.3)'
  },
  zIndices: {},
  transitions: {}
});
const targetTheme = theme => {
  switch (theme) {
    case 'dark':
      return darkTheme;
      break;
    default:
      return '';
      break;
  }
};
const scaleUp = (0,_stitches_react__WEBPACK_IMPORTED_MODULE_0__.keyframes)({
  '0%': {
    opacity: '0.3'
  },
  '100%': {
    opacity: '1'
  }
});

/***/ })

});
//# sourceMappingURL=stories-Button-stories.f32117e1776e36d60d6d.hot-update.js.map