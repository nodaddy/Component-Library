{"version":3,"file":"stories-Button-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AASA;;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AChFA;;;;;;;;;;;;;;;;;;;ACAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA","sources":["webpack://acl-rn/./src/button/Button.tsx","webpack://acl-rn/./src/index.ts","webpack://acl-rn/./src/stitches.ts"],"sourcesContent":["import React, { FC } from \"react\";\nimport { scaleUp, styled, targetTheme } from \"../stitches\";\nimport Stitches from \"@stitches/react\";\nimport { MouseEvent } from \"react\";\n\nconst StyledButton = styled(\"button\", {\n  // width and height will only be as that of text content + padding, user can't increase the width beyond that, supporting minimalistic design aproach\n  padding: \"$2 calc($2 + $3)\",\n  fontSize: \"$2\",\n  borderWidth: \"$1\",\n  borderRadius: \"$2\",\n  background: \"$background\",\n  borderColor: \"$shadow\",\n  color: \"$primary\",\n  boxShadow: \"$2\",\n  variants: {\n    type: {\n      link: {\n        borderWidth: \"$0\",\n        boxShadow: \"$0\",\n        background: \"transparent\",\n      },\n    },\n    effect: {\n      blink: {\n        animation: `${scaleUp} 1s ease-in-out infinite`,\n      },\n    },\n    size: {\n      small: {\n        fontSize: \"$1\",\n        padding: \"$1 $3\",\n      },\n      large: {\n        fontSize: \"$3\",\n        padding: \"$3 calc($3 + $2)\",\n      },\n    },\n  },\n});\n\ninterface StyledButtonOwnProps {\n  label: string;\n  onClick: (e: MouseEvent<HTMLButtonElement>) => any;\n  theme?: \"default\" | \"dark\";\n  loading?: boolean;\n}\n\n// extract variants from StyledButton component. This ensures your variants support responsive syntax.\ntype ButtonWrapVariants = Stitches.VariantProps<typeof StyledButton>;\n\ntype StyledButtonProps = StyledButtonOwnProps & ButtonWrapVariants;\n\nconst Button: FC<StyledButtonProps> = (props: StyledButtonProps) => {\n  const { theme, label, onClick, loading } = props;\n  return (\n    <>\n      {/* create a separate component called 'Loading', with similar css */}\n      { loading && <div style={{\n          height: '6px',\n          position: 'fixed',\n          top: '0px',\n          zIndex: '99999',\n          width: '100vw',\n          backgroundColor: 'blue',\n        }} />\n      }\n      <StyledButton\n        data-testid=\"button\"\n        {...props}\n        onClick={onClick}\n        className={targetTheme(theme)}\n        disabled={loading}\n      >\n        {label}\n      </StyledButton>\n    </>\n  );\n};\n\nexport default Button;\n","import Button from \"./button/Button\";\n\nexport { Button };\n","import { createStitches, keyframes } from \"@stitches/react\";\n\nexport const { styled } = createStitches({\n  theme: {\n    colors: {\n      background: \"#ffffff\",\n      text: \"#333333\",\n      primary: \"#0f8f8f\",\n      secondary: \"#6c757d\",\n      success: \"#28a745\",\n      danger: \"#dc3545\",\n      warning: \"#ffc107\",\n      info: \"#17a2b8\",\n      shadow: \"rgba(0, 0, 0, 0.2)\",\n    },\n    space: {\n      1: \"5px\",\n      2: \"10px\",\n      3: \"15px\",\n    },\n    fontSizes: {\n      1: \"12px\",\n      2: \"15px\",\n      3: \"17px\",\n    },\n    fonts: {\n      untitled: \"Untitled Sans, apple-system, sans-serif\",\n      mono: \"Söhne Mono, menlo, monospace\",\n    },\n    fontWeights: {\n      1: \"200\",\n      2: \"500\",\n      3: \"700\",\n    },\n    lineHeights: {},\n    letterSpacings: {},\n    sizes: {},\n    borderWidths: {\n      0: \"0\",\n      1: \"1px\",\n      2: \"2px\",\n    },\n    borderStyles: {},\n    radii: {\n      1: \"3px\",\n      2: \"7px\",\n      3: \"999px\",\n      4: \"50%\",\n    },\n    shadows: {\n      0: \"0 0 0 transparent\", // Transparent shadow (no shadow)\n      1: \"0 1px 2px rgba(0, 0, 0, 0.1)\", // Very subtle shadow\n      2: \"0 2px 4px rgba(0, 0, 0, 0.1)\", // Subtle shadow\n      3: \"0 3px 6px rgba(0, 0, 0, 0.1)\", // Slightly more pronounced shadow\n    },\n    zIndices: {},\n    transitions: {},\n  },\n});\n\nconst { createTheme } = createStitches({});\n\nexport const darkTheme = createTheme(\"dark-theme\", {\n  colors: {\n    background: \"#333333\",\n    text: \"#ffffff\",\n    primary: \"#0f8f8f\",\n    secondary: \"#6c757d\",\n    success: \"#28a745\",\n    danger: \"#dc3545\",\n    warning: \"#ffc107\",\n    info: \"#17a2b8\",\n    shadow: \"rgba(0, 0, 0, 0.2)\",\n  },\n  space: {\n    1: \"5px\",\n    2: \"10px\",\n    3: \"15px\",\n  },\n  fontSizes: {\n    1: \"12px\",\n    2: \"15px\",\n    3: \"17px\",\n  },\n  fonts: {\n    untitled: \"Untitled Sans, apple-system, sans-serif\",\n    mono: \"Söhne Mono, menlo, monospace\",\n  },\n  fontWeights: {\n    1: \"200\",\n    2: \"500\",\n    3: \"700\",\n  },\n  lineHeights: {},\n  letterSpacings: {},\n  sizes: {},\n  borderWidths: {\n    0: \"0\",\n    1: \"1px\",\n    2: \"2px\",\n  },\n  borderStyles: {},\n  radii: {\n    1: \"3px\",\n    2: \"7px\",\n    3: \"999px\",\n    4: \"50%\",\n  },\n  shadows: {\n    0: \"0 0 0 transparent\", // Transparent shadow (no shadow)\n    1: \"0 1px 2px rgba(0, 0, 0, 0.1)\", // Very subtle shadow\n    2: \"0 2px 4px rgba(0, 0, 0, 0.1)\", // Subtle shadow\n    3: \"0 3px 6px rgba(0, 0, 0, 0.1)\", // Slightly more pronounced shadow\n  },\n  zIndices: {},\n  transitions: {},\n});\n\nexport const targetTheme = (theme: string | undefined) => {\n  switch (theme) {\n    case \"dark\":\n      return darkTheme;\n    default:\n      return \"\";\n  }\n};\n\nexport const scaleUp = keyframes({\n  \"0%\": { opacity: \"0.3\" },\n  \"100%\": { opacity: \"1\" },\n});\n"],"names":[],"sourceRoot":""}