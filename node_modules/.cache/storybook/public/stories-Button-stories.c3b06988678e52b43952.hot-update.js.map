{"version":3,"file":"stories-Button-stories.c3b06988678e52b43952.hot-update.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAGA;;AAKA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAKA","sources":["webpack://acl-rn/./src/button/button.tsx"],"sourcesContent":["import React, { FC } from \"react\";\nimport { StyledButtonOwnProps } from \"./button.types\";\nimport { styled, targetTheme } from \"../stitches\";\nimport type * as Stitches from '@stitches/react';\n\nconst StyledButton = styled('button', {\n    padding: '$2 $3',\n    fontSize: '$3',\n    borderWidth: '$1',\n    backgroundColor: '$white',\n    cursor: 'pointer',\n    borderRadius: '$3',\n    background: '$background',\n    color: '$text',\n    variants: {\n        type: {\n            link: {\n                borderWidth: '$0'\n            },\n            blinker: {\n                '@keyframes blink': {\n                    '0%, 100%': {\n                        opacity: 1,\n                    },\n                    '50%': {\n                        opacity: 0,\n                    },\n                },\n                animation: 'blink 1s ease-in-out infinite',\n                background: 'red'\n            }\n        }\n    },\n    \n});\n\n\n// extract variants from StyledButton component. This ensures your variants support responsive syntax.\ntype ButtonWrapVariants = Stitches.VariantProps<typeof StyledButton>\n\ntype StyledButtonProps = StyledButtonOwnProps & ButtonWrapVariants;\n\nconst Button:FC<StyledButtonProps> = (props: StyledButtonProps) => {\n    const { theme, label } = props;\n    return <StyledButton {...props} className={targetTheme(theme)}> { label } </StyledButton>;\n}\n\nexport default Button;"],"names":[],"sourceRoot":""}