{"version":3,"file":"stories-Button-stories.5f0f0d4d2ca6ab28d70b.hot-update.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://acl-rn/./src/button/button.tsx","webpack://acl-rn/./src/stitches.ts"],"sourcesContent":["import React, { FC } from \"react\";\nimport { StyledButtonOwnProps } from \"./button.types\";\nimport { styled } from \"../stitches\";\nimport type * as Stitches from '@stitches/react';\n\n const StyledButton = styled('button', {\n    paddingLeft: 'var(--padding)',\n    variants:{\n        color: {\n            red: {\n                backgroundColor: \"red\"\n            },\n            green: {\n                backgroundColor: \"$\"\n            },\n        },\n        type: {\n            primary: {\n                backgroundColor: \"red\"\n            },\n            secondary: {\n                backgroundColor: \"red\"\n            }\n        }\n    }\n });\n\n// extract variants from StyledButton component. This ensures your variants support responsive syntax.\ntype ButtonWrapVariants = Stitches.VariantProps<typeof StyledButton>\n\ntype StyledButtonProps = StyledButtonOwnProps & ButtonWrapVariants;\n\nconst Button:FC<StyledButtonProps> = (props: StyledButtonProps) => {\n    return <StyledButton {...props} className=\"dark-theme\"> { props.label } </StyledButton>;\n}\n\nexport default Button;","import { createStitches } from \"@stitches/react\";\n\nexport const { styled } = createStitches({\n    theme: {\n      colors: {\n        gray500: 'hsl(206,10%,76%)',\n        blue500: 'hsl(206,100%,50%)',\n        purple500: 'hsl(252,78%,60%)',\n        green500: 'hsl(148,60%,60%)',\n        red500: 'hsl(352,100%,62%)',\n      },\n      space: {\n        1: '5px',\n        2: '10px',\n        3: '15px',\n      },\n      fontSizes: {\n        1: '12px',\n        2: '13px',\n        3: '15px',\n      },\n      fonts: {\n        untitled: 'Untitled Sans, apple-system, sans-serif',\n        mono: 'SÃ¶hne Mono, menlo, monospace',\n      },\n      fontWeights: {\n        1: '200',\n        2: '500',\n        3: '700',\n      },\n      lineHeights: {},\n      letterSpacings: {},\n      sizes: {},\n      borderWidths: {},\n      borderStyles: {},\n      radii: {\n        1: '3px',\n        2: '7px',\n        3: '50%',\n      },\n      shadows: {},\n      zIndices: {},\n      transitions: {},\n    },\n  });\n\nconst { createTheme } = createStitches({});\n\nconst darkTheme = createTheme('dark-theme', {\n  colors: {\n    hiContrast: 'hsl(206,2%,93%)',\n    loContrast: 'hsl(206,8%,8%)',\n\n    gray100: 'hsl(206,8%,12%)',\n    gray200: 'hsl(206,7%,14%)',\n    gray300: 'hsl(206,7%,15%)',\n    gray400: 'hsl(206,7%,24%)',\n    gray500: 'yellow',\n    gray600: 'hsl(206,5%,53%)',\n  },\n  space: {},\n  fonts: {},\n});"],"names":[],"sourceRoot":""}