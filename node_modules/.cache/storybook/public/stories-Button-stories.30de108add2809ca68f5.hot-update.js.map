{"version":3,"file":"stories-Button-stories.30de108add2809ca68f5.hot-update.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AAEA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAKA","sources":["webpack://acl-rn/./src/button/button.tsx"],"sourcesContent":["import React, { FC } from \"react\";\nimport { StyledButtonOwnProps } from \"./button.types\";\nimport { styled } from \"../stitches\";\nimport type * as Stitches from '@stitches/react';\nimport { targetTheme } from \"../stories/Button.stories\";\n\n const StyledButton = styled('button', {\n    paddingLeft: 'var(--padding)',\n    variants:{\n        color: {\n            red: {\n                backgroundColor: \"red\"\n            },\n            green: {\n                backgroundColor: \"$gray500\"\n            },\n        },\n        type: {\n            primary: {\n                backgroundColor: \"red\"\n            },\n            secondary: {\n                backgroundColor: \"red\"\n            }\n        },\n    }\n });\n\n// extract variants from StyledButton component. This ensures your variants support responsive syntax.\ntype ButtonWrapVariants = Stitches.VariantProps<typeof StyledButton>\n\ntype StyledButtonProps = StyledButtonOwnProps & ButtonWrapVariants;\n\nconst Button:FC<StyledButtonProps> = (props: StyledButtonProps) => {\n    const { theme, label } = props;\n    return <StyledButton {...props} className={targettheme(theme)}> { label } </StyledButton>;\n}\n\nexport default Button;"],"names":[],"sourceRoot":""}