"use strict";
self["webpackHotUpdateacl_rn"]("stories-Button-stories",{

/***/ "./src/button/button.tsx":
/*!*******************************!*\
  !*** ./src/button/button.tsx ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _stitches__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../stitches */ "./src/stitches.ts");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");



const StyledButton = (0,_stitches__WEBPACK_IMPORTED_MODULE_1__.styled)('button', {
  padding: '$2 $3',
  fontSize: '$2',
  borderWidth: '$1',
  cursor: 'pointer',
  borderRadius: '$2',
  background: '$background',
  borderColor: '$shadow',
  color: '$text',
  boxShadow: '$2',
  variants: {
    type: {
      link: {
        borderWidth: '$0'
      }
    },
    effect: {
      blink: {
        animation: `${_stitches__WEBPACK_IMPORTED_MODULE_1__.scaleUp} 0.6s ease-in-out infinite`
      }
    },
    size: {
      small: {
        fontSize: '$1',
        padding: '$1 $3'
      },
      large: {
        fontSize: '$3',
        padding: '$3 $3'
      }
    }
  }
});

// extract variants from StyledButton component. This ensures your variants support responsive syntax.

const Button = props => {
  const {
    theme,
    label,
    onClick
  } = props;
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(StyledButton, {
    ...props,
    onClick: onClick,
    className: (0,_stitches__WEBPACK_IMPORTED_MODULE_1__.targetTheme)(theme),
    children: [" ", label, " "]
  });
};
Button.displayName = "Button";
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Button);
try {
    // @ts-ignore
    button.displayName = "button";
    // @ts-ignore
    button.__docgenInfo = { "description": "", "displayName": "button", "props": { "label": { "defaultValue": null, "description": "", "name": "label", "required": true, "type": { "name": "string" } }, "onClick": { "defaultValue": null, "description": "", "name": "onClick", "required": true, "type": { "name": "(e: MouseEvent<HTMLButtonElement, MouseEvent>) => any" } }, "theme": { "defaultValue": null, "description": "", "name": "theme", "required": false, "type": { "name": "enum", "value": [{ "value": "\"dark\"" }, { "value": "\"default\"" }] } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "\"link\" | ({ \"@initial\"?: \"link\"; } & { [x: string]: \"link\"; }) | undefined" } }, "effect": { "defaultValue": null, "description": "", "name": "effect", "required": false, "type": { "name": "\"blink\" | ({ \"@initial\"?: \"blink\"; } & { [x: string]: \"blink\"; }) | undefined" } }, "size": { "defaultValue": null, "description": "", "name": "size", "required": false, "type": { "name": "\"small\" | \"large\" | ({ \"@initial\"?: \"small\" | \"large\"; } & { [x: string]: \"small\" | \"large\"; }) | undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/button/button.tsx#button"] = { docgenInfo: button.__docgenInfo, name: "button", path: "src/button/button.tsx#button" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ })

});
//# sourceMappingURL=stories-Button-stories.d6a9d761f12e2a8b0eb0.hot-update.js.map