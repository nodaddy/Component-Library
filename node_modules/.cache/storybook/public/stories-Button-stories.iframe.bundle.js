"use strict";
(self["webpackChunkacl_rn"] = self["webpackChunkacl_rn"] || []).push([["stories-Button-stories"],{

/***/ "./src/stories/Button.stories.ts":
/*!***************************************!*\
  !*** ./src/stories/Button.stories.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Default: () => (/* binding */ Default),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../index */ "./src/index.ts");


// More on how to set up stories at: https://storybook.js.org/docs/react/writing-stories/introduction#default-export
const meta = {
  title: "Example/Button",
  component: _index__WEBPACK_IMPORTED_MODULE_0__.Button,
  parameters: {
    // Optional parameter to center the component in the Canvas. More info: https://storybook.js.org/docs/react/configure/story-layout
  },
  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/react/writing-docs/autodocs
  tags: ["autodocs"],
  // More on argTypes: https://storybook.js.org/docs/react/api/argtypes
  argTypes: {
    label: {
      control: "text",
      description: "Label for button"
    },
    type: {
      control: "radio",
      description: "Styling type",
      options: ["link", "default"]
    },
    size: {
      control: "radio",
      description: "Size of button",
      options: ["small", "large", "default"]
    },
    effect: {
      control: "radio",
      description: "Animation effects",
      options: ["blink", "default"]
    },
    onClick: {
      description: "Function that runs on click of the button"
    },
    loading: {
      control: "radio",
      options: [true, false]
    }
  }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (meta);
// More on writing stories with args: https://storybook.js.org/docs/react/writing-stories/args
const Default = {
  args: {
    label: "Button",
    onClick: () => {
      alert("Button clicked");
    }
  }
};
Default.parameters = {
  ...Default.parameters,
  docs: {
    ...Default.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: \"Button\",\n    onClick: () => {\n      alert(\"Button clicked\");\n    }\n  }\n}",
      ...Default.parameters?.docs?.source
    }
  }
};
const __namedExportsOrder = ["Default"];

/***/ }),

/***/ "./src/button/Button.tsx":
/*!*******************************!*\
  !*** ./src/button/Button.tsx ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _stitches__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../stitches */ "./src/stitches.ts");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");





const StyledButton = (0,_stitches__WEBPACK_IMPORTED_MODULE_1__.styled)("button", {
  // width and height will only be as that of text content + padding, user can't increase the width beyond that, supporting minimalistic design aproach
  padding: "$2 calc($2 + $3)",
  fontSize: "$2",
  borderWidth: "$1",
  borderRadius: "$2",
  background: "$background",
  borderColor: "$shadow",
  color: "$primary",
  boxShadow: "$2",
  variants: {
    type: {
      link: {
        borderWidth: "$0",
        boxShadow: "$0",
        background: "transparent"
      }
    },
    effect: {
      blink: {
        animation: `${_stitches__WEBPACK_IMPORTED_MODULE_1__.scaleUp} 1s ease-in-out infinite`
      }
    },
    size: {
      small: {
        fontSize: "$1",
        padding: "$1 $3"
      },
      large: {
        fontSize: "$3",
        padding: "$3 calc($3 + $2)"
      }
    }
  }
});

// extract variants from StyledButton component. This ensures your variants support responsive syntax.

const Button = props => {
  const {
    theme,
    label,
    onClick,
    loading
  } = props;
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, {
    children: [loading && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div", {
      style: {
        height: '6px',
        position: 'fixed',
        top: '0px',
        zIndex: '99999',
        width: '100vw',
        backgroundColor: 'blue'
      }
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(StyledButton, {
      "data-testid": "button",
      ...props,
      onClick: onClick,
      className: (0,_stitches__WEBPACK_IMPORTED_MODULE_1__.targetTheme)(theme),
      disabled: loading,
      children: label
    })]
  });
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Button);
try {
    // @ts-ignore
    Button.displayName = "Button";
    // @ts-ignore
    Button.__docgenInfo = { "description": "", "displayName": "Button", "props": { "label": { "defaultValue": null, "description": "", "name": "label", "required": true, "type": { "name": "string" } }, "onClick": { "defaultValue": null, "description": "", "name": "onClick", "required": true, "type": { "name": "(e: MouseEvent<HTMLButtonElement, MouseEvent>) => any" } }, "theme": { "defaultValue": null, "description": "", "name": "theme", "required": false, "type": { "name": "enum", "value": [{ "value": "\"dark\"" }, { "value": "\"default\"" }] } }, "loading": { "defaultValue": null, "description": "", "name": "loading", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "\"link\" | ({ \"@initial\"?: \"link\"; } & { [x: string]: \"link\"; }) | undefined" } }, "effect": { "defaultValue": null, "description": "", "name": "effect", "required": false, "type": { "name": "\"blink\" | ({ \"@initial\"?: \"blink\"; } & { [x: string]: \"blink\"; }) | undefined" } }, "size": { "defaultValue": null, "description": "", "name": "size", "required": false, "type": { "name": "\"small\" | \"large\" | ({ \"@initial\"?: \"small\" | \"large\"; } & { [x: string]: \"small\" | \"large\"; }) | undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/button/Button.tsx#Button"] = { docgenInfo: Button.__docgenInfo, name: "Button", path: "src/button/Button.tsx#Button" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Button: () => (/* reexport safe */ _button_Button__WEBPACK_IMPORTED_MODULE_0__["default"])
/* harmony export */ });
/* harmony import */ var _button_Button__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./button/Button */ "./src/button/Button.tsx");



/***/ }),

/***/ "./src/stitches.ts":
/*!*************************!*\
  !*** ./src/stitches.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   darkTheme: () => (/* binding */ darkTheme),
/* harmony export */   scaleUp: () => (/* binding */ scaleUp),
/* harmony export */   styled: () => (/* binding */ styled),
/* harmony export */   targetTheme: () => (/* binding */ targetTheme)
/* harmony export */ });
/* harmony import */ var _stitches_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stitches/react */ "./node_modules/@stitches/react/dist/index.mjs");

const {
  styled
} = (0,_stitches_react__WEBPACK_IMPORTED_MODULE_0__.createStitches)({
  theme: {
    colors: {
      background: "#ffffff",
      text: "#333333",
      primary: "#0f8f8f",
      secondary: "#6c757d",
      success: "#28a745",
      danger: "#dc3545",
      warning: "#ffc107",
      info: "#17a2b8",
      shadow: "rgba(0, 0, 0, 0.2)"
    },
    space: {
      1: "5px",
      2: "10px",
      3: "15px"
    },
    fontSizes: {
      1: "12px",
      2: "15px",
      3: "17px"
    },
    fonts: {
      untitled: "Untitled Sans, apple-system, sans-serif",
      mono: "SÃ¶hne Mono, menlo, monospace"
    },
    fontWeights: {
      1: "200",
      2: "500",
      3: "700"
    },
    lineHeights: {},
    letterSpacings: {},
    sizes: {},
    borderWidths: {
      0: "0",
      1: "1px",
      2: "2px"
    },
    borderStyles: {},
    radii: {
      1: "3px",
      2: "7px",
      3: "999px",
      4: "50%"
    },
    shadows: {
      0: "0 0 0 transparent",
      // Transparent shadow (no shadow)
      1: "0 1px 2px rgba(0, 0, 0, 0.1)",
      // Very subtle shadow
      2: "0 2px 4px rgba(0, 0, 0, 0.1)",
      // Subtle shadow
      3: "0 3px 6px rgba(0, 0, 0, 0.1)" // Slightly more pronounced shadow
    },

    zIndices: {},
    transitions: {}
  }
});
const {
  createTheme
} = (0,_stitches_react__WEBPACK_IMPORTED_MODULE_0__.createStitches)({});
const darkTheme = createTheme("dark-theme", {
  colors: {
    background: "#333333",
    text: "#ffffff",
    primary: "#0f8f8f",
    secondary: "#6c757d",
    success: "#28a745",
    danger: "#dc3545",
    warning: "#ffc107",
    info: "#17a2b8",
    shadow: "rgba(0, 0, 0, 0.2)"
  },
  space: {
    1: "5px",
    2: "10px",
    3: "15px"
  },
  fontSizes: {
    1: "12px",
    2: "15px",
    3: "17px"
  },
  fonts: {
    untitled: "Untitled Sans, apple-system, sans-serif",
    mono: "SÃ¶hne Mono, menlo, monospace"
  },
  fontWeights: {
    1: "200",
    2: "500",
    3: "700"
  },
  lineHeights: {},
  letterSpacings: {},
  sizes: {},
  borderWidths: {
    0: "0",
    1: "1px",
    2: "2px"
  },
  borderStyles: {},
  radii: {
    1: "3px",
    2: "7px",
    3: "999px",
    4: "50%"
  },
  shadows: {
    0: "0 0 0 transparent",
    // Transparent shadow (no shadow)
    1: "0 1px 2px rgba(0, 0, 0, 0.1)",
    // Very subtle shadow
    2: "0 2px 4px rgba(0, 0, 0, 0.1)",
    // Subtle shadow
    3: "0 3px 6px rgba(0, 0, 0, 0.1)" // Slightly more pronounced shadow
  },

  zIndices: {},
  transitions: {}
});
const targetTheme = theme => {
  switch (theme) {
    case "dark":
      return darkTheme;
    default:
      return "";
  }
};
const scaleUp = (0,_stitches_react__WEBPACK_IMPORTED_MODULE_0__.keyframes)({
  "0%": {
    opacity: "0.3"
  },
  "100%": {
    opacity: "1"
  }
});

/***/ })

}]);
//# sourceMappingURL=stories-Button-stories.iframe.bundle.js.map