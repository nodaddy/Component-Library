"use strict";
self["webpackHotUpdateacl_rn"]("stories-Button-stories",{

/***/ "./src/button/button.tsx":
/*!*******************************!*\
  !*** ./src/button/button.tsx ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _stitches__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../stitches */ "./src/stitches.ts");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");



const StyledButton = (0,_stitches__WEBPACK_IMPORTED_MODULE_1__.styled)('button', {
  paddingLeft: 'var(--padding)',
  variants: {
    color: {
      red: {
        backgroundColor: "red"
      },
      green: {
        backgroundColor: "$"
      }
    },
    type: {
      primary: {
        backgroundColor: "red"
      },
      secondary: {
        backgroundColor: "red"
      }
    }
  }
});

// extract variants from StyledButton component. This ensures your variants support responsive syntax.

const Button = props => {
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(StyledButton, {
    ...props,
    className: "dark-theme",
    children: [" ", props.label, " "]
  });
};
Button.displayName = "Button";
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Button);
try {
    // @ts-ignore
    button.displayName = "button";
    // @ts-ignore
    button.__docgenInfo = { "description": "", "displayName": "button", "props": { "label": { "defaultValue": null, "description": "", "name": "label", "required": true, "type": { "name": "string" } }, "onClick": { "defaultValue": null, "description": "", "name": "onClick", "required": true, "type": { "name": "(e: MouseEvent<HTMLButtonElement, MouseEvent>) => any" } }, "color": { "defaultValue": null, "description": "", "name": "color", "required": false, "type": { "name": "\"red\" | \"green\" | ({ \"@initial\"?: \"red\" | \"green\"; } & { [x: string]: \"red\" | \"green\"; }) | undefined" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "\"primary\" | \"secondary\" | ({ \"@initial\"?: \"primary\" | \"secondary\"; } & { [x: string]: \"primary\" | \"secondary\"; }) | undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/button/button.tsx#button"] = { docgenInfo: button.__docgenInfo, name: "button", path: "src/button/button.tsx#button" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/stitches.ts":
/*!*************************!*\
  !*** ./src/stitches.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   styled: () => (/* binding */ styled)
/* harmony export */ });
/* harmony import */ var _stitches_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stitches/react */ "./node_modules/@stitches/react/dist/index.mjs");

const {
  styled
} = (0,_stitches_react__WEBPACK_IMPORTED_MODULE_0__.createStitches)({
  theme: {
    colors: {
      gray500: 'hsl(206,10%,76%)',
      blue500: 'hsl(206,100%,50%)',
      purple500: 'hsl(252,78%,60%)',
      green500: 'hsl(148,60%,60%)',
      red500: 'hsl(352,100%,62%)'
    },
    space: {
      1: '5px',
      2: '10px',
      3: '15px'
    },
    fontSizes: {
      1: '12px',
      2: '13px',
      3: '15px'
    },
    fonts: {
      untitled: 'Untitled Sans, apple-system, sans-serif',
      mono: 'SÃ¶hne Mono, menlo, monospace'
    },
    fontWeights: {
      1: '200',
      2: '500',
      3: '700'
    },
    lineHeights: {},
    letterSpacings: {},
    sizes: {},
    borderWidths: {},
    borderStyles: {},
    radii: {
      1: '3px',
      2: '7px',
      3: '50%'
    },
    shadows: {},
    zIndices: {},
    transitions: {}
  }
});
const {
  createTheme
} = (0,_stitches_react__WEBPACK_IMPORTED_MODULE_0__.createStitches)({});
const darkTheme = createTheme('dark-theme', {
  colors: {
    hiContrast: 'hsl(206,2%,93%)',
    loContrast: 'hsl(206,8%,8%)',
    gray100: 'hsl(206,8%,12%)',
    gray200: 'hsl(206,7%,14%)',
    gray300: 'hsl(206,7%,15%)',
    gray400: 'hsl(206,7%,24%)',
    gray500: 'yellow',
    gray600: 'hsl(206,5%,53%)'
  },
  space: {},
  fonts: {}
});

/***/ })

});
//# sourceMappingURL=stories-Button-stories.5f0f0d4d2ca6ab28d70b.hot-update.js.map