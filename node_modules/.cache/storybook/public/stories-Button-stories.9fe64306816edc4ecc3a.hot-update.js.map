{"version":3,"file":"stories-Button-stories.9fe64306816edc4ecc3a.hot-update.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAKA","sources":["webpack://acl-rn/./src/button/button.tsx"],"sourcesContent":["import React, { FC } from \"react\";\nimport { StyledButtonOwnProps } from \"./button.types\";\nimport { styled, targetTheme } from \"../stitches\";\nimport type * as Stitches from '@stitches/react';\n\n const StyledButton = styled('button', {\n    padding: '$2 $3',\n    fontSize: '$3',\n    borderWidth: '$1',\n    backgroundColor:  '$white',\n    cursor: 'pointer',\n    borderRadius: '$3',\n    variants: {\n        type: {\n            primary: {\n                background: '$background',\n                color: '$text'\n            },\n            secondary: {\n                background: '$secondary',\n                color: '$text'\n            }\n        }\n    }\n});\n\n// extract variants from StyledButton component. This ensures your variants support responsive syntax.\ntype ButtonWrapVariants = Stitches.VariantProps<typeof StyledButton>\n\ntype StyledButtonProps = StyledButtonOwnProps & ButtonWrapVariants;\n\nconst Button:FC<StyledButtonProps> = (props: StyledButtonProps) => {\n    const { theme, label } = props;\n    return <StyledButton {...props} className={targetTheme(theme)}> { label } </StyledButton>;\n}\n\nexport default Button;"],"names":[],"sourceRoot":""}