{"version":3,"file":"stories-Button-stories.c822ebc5335ae00d41c0.hot-update.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;;AAEA;;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAKA","sources":["webpack://acl-rn/./src/button/button.tsx"],"sourcesContent":["import React, { FC } from \"react\";\nimport { ButtonProps, ButtonWrapProps, StyledButtonOwnProps } from \"./button.types\";\nimport {styled} from '@stitches/react';\nimport type * as Stitches from '@stitches/react';\n\n const StyledButton = styled('button', {\n    paddingLeft: 'var(--padding)',\n    variants:{\n        color: {\n            red: {\n                backgroundColor: \"red\"\n            },\n            green: {\n                backgroundColor: \"LightGreen\"\n            },\n        },\n        type: {\n            primary: {\n\n            },\n            secondary: {\n\n            }\n        }\n    }\n });\n\n// extract variants from StyledButton component. This ensures your variants support responsive syntax.\ntype ButtonWrapVariants = Stitches.VariantProps<typeof StyledButton>\n\ntype StyledButtonProps = StyledButtonOwnProps & ButtonWrapVariants;\n\nconst Button:FC<StyledButtonProps> = (props: StyledButtonProps) => {\n    const { label, color, type} = props;\n    return <StyledButton type={type}  color={color}> { label } </StyledButton>;\n}\n\nexport default Button;"],"names":[],"sourceRoot":""}